PySOT Dictionary Layout
=======================
When the server is launched it compiles a dictionary of all components required to 
to start a Surrogate Optimization. It is generated by using the pySOT_dictionary module.

Inforation on how each of the component is stored in the dictionary is given below. 
Also more inforamtion on how each of the components operate can be found here_.

.. _here: http://pysot.readthedocs.io/en/latest/index.html

Experimental Design
-------------------
| **KEY:** experimental_design
| **VALUE:** Dictionary of Experimental Design
| **FILE:** pySOT/experimental_design.py
| **STRUCTURE:** The dictionary contains all the Experimental Design's as keys and 
  then a list of lists as values. The first list containing the input arguments for that 
  experimental design and the second list contains the default values for the arguments.

Surrogate Model
---------------
| **KEY:** surrogate_model
| **VALUE:** Dictionary of Surrogate Model
| **FILE:** pySOT/rbf.py
| **STRUCTURE:** The dictionary contains all the Experimental Design object names as key and 
  then a list of lists as value. The first list containing the input arguments for that 
  surrogate model and the second list contains the default values for the arguments.

Adaptive Sampling
-----------------
| **KEY:** adaptive_sampling
| **VALUE:** Dictionary of Adaptive Sampling strategies
| **FILE:** pySOT/adaptive_sampling.py
| **STRUCTURE:** The dictionary contains all the Adaptive Sampling objects names as key and 
  then a list of lists as value. The first list containing the input arguments for that 
  Adaptive Sampling strategy and the second list contains the default values for the arguments.
 
Optimization Problem
--------------------
| **KEY:** optimization_problem
| **VALUE:** Dictionary of Optimization Problem
| **FILE:** pySOT/test_problems.py
| **STRUCTURE:** The dictionary contains all the Optimization Problem objects names as key and 
  then a list of lists as value. The first list containing the input arguments for that 
  Optimization Problem and the second list contains the default values for the arguments.
     
Strategy
--------
| **KEY:** strategy
| **VALUE:** Dictionary of strategy
| **FILE:** pySOT/sot_sync_strategies.py
| **STRUCTURE:** The dictionary contains all the Strategy objects names as key and 
  then a list of lists as value. The first list containing the input arguments for that 
  Strategy and the second list contains the default values for the arguments.

Controller
--------------------
| **KEY:** controller
| **VALUE:** Dictionary of Optimization Problem
| **FILE:** POAP/controller.py
| **STRUCTURE:** The dictionary contains all the Controller objects names as key and 
  then a list of lists as value. The first list containing the input arguments for that 
  Controller and the second list contains the default values for the arguments.
       
Kernel
------
| **KEY:** kernel
| **VALUE:** List of Kernel's
| **FILE:** pySOT/kernels.py
| **STRUCTURE:** The list contains the list of the names of the kernels.

Tail
----
| **KEY:** tail
| **VALUE:** List of Tail's
| **FILE:** pySOT/tails.py
| **STRUCTURE:** The list contains the list of the names of the tails.

Delay
-----
| **KEY:** delay
| **VALUE:** List of Delay Functions
| **FILE:** pySOTDashboard/delay_function.py
| **STRUCTURE:** The list contains the list of user defined delay functions.

Projection Function
-------------------
| **KEY:** proj_fun
| **VALUE:** List of Projection Functions
| **FILE:** pySOTDashboard/projection_function.py
| **STRUCTURE:** The list contains the list of user defined projection functions.

second is none 
sequesnce of defalut values

.. code-block:: json

   { 
     "experimental_design":
       {
         "BoxBehnken": [["dim"], "None"], 
         "TwoFactorial": [["dim"], "None"], 
         "LatinHypercube": [["dim", "npts", "criterion"], ["c"]],
         "SymmetricLatinHypercube": [["dim", "npts"], "None"]
       }, 

     "kernel": 
       [
         "LinearKernel", 
         "TPSKernel", 
         "CubicKernel"
       ],

     "tail":
       [
         "ConstantTail", 
         "LinearTail"
       ],

     "delay":
       [
         "delay"
       ],

     "proj_fun": 
       [
         "projection"
       ],

     "surrogate_model": 
       {
         "RBFInterpolant": 
           [
             ["kernel", "tail", "maxp", "eta"],
             ["CubicKernel", "LinearTail", 500, 1e-08]
           ]
       }, 

     "adaptive_sampling": 
       {
         "CandidateDDS_INT":
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ],
         "CandidateDDS": 
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ],
         "CandidateUniform_INT": 
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ],
         "CandidateDYCORS_CONT": 
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ],
         "CandidateSRBF": 
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ],
         "GeneticAlgorithm": 
           [
             ["data"], 
             "None"
           ], 
         "CandidateDYCORS_INT": 
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ],
         "CandidateDYCORS": 
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ],
         "CandidateSRBF_INT": 
           [ 
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ],
         "MultiSampling": 
           [
             ["strategy_list", "cycle"], 
             "None"
           ],
         "MultiStartGradient":
           [ 
             ["data", "method", "num_restarts"], 
             ["L-BFGS-B", 30]
           ],
         "CandidateUniform_CONT": 
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ],
         "CandidateDDS_CONT":
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ],
         "CandidateUniform": 
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ], 
         "CandidateSRBF_CONT": 
           [
             ["data", "numcand", "weights"], 
             ["None", "None"]
           ]
       },

     "optimization_problem": 
       {
         "Rastrigin": [["dim"], [10]], 
         "Levy": [["dim"], [10]], 
         "Schwefel": [["dim"], [10]], 
         "Quartic": [["dim"], [10]], 
         "Exponential": [["dim"], [10]], 
         "Hartman6": [["dim"], [6]], 
         "Whitley": [["dim"], [10]], 
         "Hartman3": [["dim"], [3]], 
         "LinearMI": [["dim"], [5]], 
         "Rosenbrock": [["dim"], [10]], 
         "Sphere": [["dim"], [10]], 
         "SchafferF7": [["dim"], [10]], 
         "Griewank": [["dim"], [10]], 
         "Ackley": [["dim"], [10]], 
         "StyblinskiTang": [["dim"], [10]], 
         "Keane": [["dim"], [10]], 
         "Michalewicz": [["dim"], [10]]
       }, 

     "controller": 
       {
         "SimTeamController": [["objective", "delay", "workers"], "None"], 
         "SerialController": [["objective", "skip"], [false]], 
         "ThreadController": [[], "None"], 
         "ScriptedController": [[], "None"], 
         "Controller": [[], "None"]
       }, 

     "strategy": 
       {
         "SyncStrategyNoConstraints": 
           [
             [
               "worker_id", "data", "response_surface", "maxeval", 
               "nsamples", "exp_design", "sampling_method", 
               "extra", "extra_vals"
             ],
             ["None", "None", "None", "None"]
           ],
         "SyncStrategyPenalty": 
           [
             [
               "worker_id", "data", "response_surface", "maxeval", 
               "nsamples", "exp_design", "sampling_method", 
               "extra", "penalty"
             ],
             ["None", "None", "None", 1000000.0]
           ],
         "SyncStrategyProjection": 
           [
             [
               "worker_id", "data", "response_surface", "maxeval", 
               "nsamples", "exp_design", "sampling_method", 
               "extra", "proj_fun"
              ],
              ["None", "None", "None", "None"]
           ]
       }
   }

